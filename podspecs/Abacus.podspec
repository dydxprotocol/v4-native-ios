Pod::Spec.new do |spec|
    spec.name                     = 'Abacus'
spec.version = '1.8.59'
    spec.homepage                 = 'https://github.com/dydxprotocol/v4-abacus'
    spec.source                   = { :git => "git@github.com:dydxprotocol/v4-abacus.git", :tag => "v#{spec.version}" }
    spec.authors                  = ''
    spec.license                  = ''
    spec.summary                  = 'Shared front-end and mobile logic written in Kotlin'
    spec.vendored_frameworks      = 'build/cocoapods/framework/Abacus.framework'
    spec.libraries                = 'c++'

    #spec.source_files  = 'src/**/*', 'gradle/**/*', '*'
    #spec.ios.exclude_files = 'src/**/*', 'gradle/**/*', '*'
    #spec.module_map = false
    
    spec.pod_target_xcconfig = {
        'KOTLIN_PROJECT_PATH' => ':',
        'PRODUCT_MODULE_NAME' => 'Abacus',
    }
                
    spec.script_phases = [
       {
            :name => 'Build abacus',
            :execution_position => :before_compile,
            :shell_path => '/bin/sh',
            :script => <<-SCRIPT
                if [ "YES" = "$COCOAPODS_SKIP_KOTLIN_BUILD" ]; then
                  echo "Skipping Gradle build task invocation due to COCOAPODS_SKIP_KOTLIN_BUILD environment variable set to \"YES\""
                  exit 0
                fi
                set -evx
        
                REPO_ROOT="$PODS_TARGET_SRCROOT"
                
                if [ ! -f $REPO_ROOT/gradlew ]; then
                    rm -rf $PRODUCT_MODULE_NAME
                    git clone git@github.com:dydxprotocol/v4-abacus.git --branch v#{spec.version} $PRODUCT_MODULE_NAME
                    
                    "$REPO_ROOT/gradlew" -p "$REPO_ROOT" $KOTLIN_PROJECT_PATH:syncFramework \
                        -Pkotlin.native.cocoapods.platform=$PLATFORM_NAME \
                        -Pkotlin.native.cocoapods.archs="$ARCHS" \
                        -Pkotlin.native.cocoapods.configuration="$CONFIGURATION"
            
                    # We will need to overwrite the dummy framework generated by cocoapods with the actual one from Kotlin
      
                    TARGET_FRAMEWORK="${TARGET_BUILD_DIR}/${TARGET_NAME}.framework"
                    ABACUS_FRAMEWORK="$REPO_ROOT/build/cocoapods/framework/$PRODUCT_MODULE_NAME.framework"
                    rm -rf $TARGET_FRAMEWORK
                    mkdir $TARGET_FRAMEWORK
                    cp -rf $ABACUS_FRAMEWORK/* $TARGET_FRAMEWORK
                else
                    "$REPO_ROOT/gradlew" -p "$REPO_ROOT" $KOTLIN_PROJECT_PATH:syncFramework \
                        -Pkotlin.native.cocoapods.platform=$PLATFORM_NAME \
                        -Pkotlin.native.cocoapods.archs="$ARCHS" \
                        -Pkotlin.native.cocoapods.configuration="$CONFIGURATION"
                fi
            SCRIPT
        }
    ]
                
end
