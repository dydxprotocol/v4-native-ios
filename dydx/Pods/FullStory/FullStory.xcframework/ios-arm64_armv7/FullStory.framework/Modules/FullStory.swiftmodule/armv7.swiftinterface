// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FullStory
@_exported import FullStory
import Swift
extension FSViewClass : Swift.ExpressibleByStringLiteral {
  @inlinable public init(stringLiteral value: Swift.String) {
        self.init(value)
    }
  @inlinable public init(unicodeScalarLiteral value: Swift.String) {
        self.init(value)
    }
  @inlinable public init(extendedGraphemeClusterLiteral value: Swift.String) {
        self.init(value)
    }
  public typealias ExtendedGraphemeClusterLiteralType = Swift.String
  public typealias StringLiteralType = Swift.String
  public typealias UnicodeScalarLiteralType = Swift.String
}
extension FSViewClass : Swift.ExpressibleByStringInterpolation {
  @inlinable public init(stringInterpolation: Swift.DefaultStringInterpolation) {
        self.init(String(stringInterpolation: stringInterpolation))
    }
  public typealias StringInterpolation = Swift.DefaultStringInterpolation
}
extension FS {
  @inlinable public static func addClass(_ view: UIKit.UIView, className name: Swift.String) {
        self.addClass(view, className: FSViewClass(name))
    }
  @inlinable public static func removeClass(_ view: UIKit.UIView, className name: Swift.String) {
        self.removeClass(view, className: FSViewClass(name))
    }
  @inlinable public static func addClasses(_ view: UIKit.UIView, classNames names: [Swift.String]) {
        self.addClasses(view, classNames: names.map(FSViewClass.init(rawValue:)))
    }
  @inlinable public static func removeClasses(_ view: UIKit.UIView, classNames names: [Swift.String]) {
        self.removeClasses(view, classNames: names.map(FSViewClass.init(rawValue:)))
    }
}
extension UIView {
  @inlinable public func fsAddClass(_ name: Swift.String) {
        self.fsAddClass(FSViewClass(name))
    }
  @inlinable public func fsRemoveClass(_ name: Swift.String) {
        self.fsRemoveClass(FSViewClass(name))
    }
  @inlinable public func fsAddClasses(_ names: [Swift.String]) {
        self.fsAddClasses(names.map(FSViewClass.init(rawValue:)))
    }
  @inlinable public func fsRemoveClasses(_ names: [Swift.String]) {
        self.fsRemoveClasses(names.map(FSViewClass.init(rawValue:)))
    }
}
extension FSEventLogLevel : Swift.CaseIterable {
  public static let allCases: [FullStory.FSEventLogLevel]
  public typealias AllCases = [FullStory.FSEventLogLevel]
}
extension FSEventLogLevel : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
